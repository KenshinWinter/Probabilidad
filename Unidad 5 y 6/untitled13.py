# -*- coding: utf-8 -*-
"""Untitled13.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NKEnY5WkHMm_rNZ2KbR_NR-NTC0rDn8X

#Carga y Exploración de Datos:
"""

import pandas as pd


# cargando los conjuntos de datos
df1= pd.read_csv("grupo1.csv")
df1.head()
df2= pd.read_csv("grupo2.csv")
df2.head()
df3= pd.read_csv("grupo3.csv")
df3.head()

#Descripcion de los datos y visualizacion
df1.describe()
df2.describe()
df3.describe()

#Generamos un histograma de ellos
df1.hist()
df2.hist()
df3.hist()

"""#Modelo de regresion lineal"""

from sklearn.linear_model import LinearRegression
import numpy as np
from scipy.stats import pearsonr

#obtener los datos de cada archivo
calificaciones1 = np.array(df1.Calificacion).reshape(-1, 1)
horasEstudio1 = np.array(df1.HorasEstudio).reshape(-1, 1)

calificaciones2 = np.array(df2.Calificacion).reshape(-1, 1)
horasEstudio2 = np.array(df2.HorasEstudio).reshape(-1, 1)


calificaciones3 = np.array(df3.Calificacion).reshape(-1, 1)
horasEstudio3 = np.array(df3.HorasEstudio).reshape(-1, 1)


#crear y entrenar el modelo de regresion lineal

modelo1 = LinearRegression()
modelo1.fit(calificaciones1,horasEstudio1)
modelo2 = LinearRegression()
modelo2.fit(calificaciones2,horasEstudio2)
modelo3 = LinearRegression()
modelo3.fit(calificaciones3,horasEstudio3)

# Coeficiente de la regresion
print("Coeficiente de la pendiente (m): ",modelo1.coef_[0])
print("Intercepcion de la recta (b): ", modelo1.intercept_)
print("Coeficiente de la pendiente (m): ",modelo2.coef_[0])
print("Intercepcion de la recta (b): ", modelo2.intercept_)
print("Coeficiente de la pendiente (m): ",modelo3.coef_[0])
print("Intercepcion de la recta (b): ", modelo3.intercept_)

calificaciones = df1.Calificacion
horasEstudio =df1.HorasEstudio

calificacione = df2.Calificacion
horasEstudi =df2.HorasEstudio

calificacion = df3.Calificacion
horasEstud =df3.HorasEstudio

# Calcular el coeficiente de correlacion de Pearson
coeficiente_correlacion1, p_valor = pearsonr(calificaciones,horasEstudio)
coeficiente_correlacion2, p_valor = pearsonr(calificacione,horasEstudi)
coeficiente_correlacion3, p_valor = pearsonr(calificacion,horasEstud)

print("Coeficiente de correlacion de pearson",coeficiente_correlacion1)
print("Coeficiente de correlacion de pearson",coeficiente_correlacion2)
print("Coeficiente de correlacion de pearson",coeficiente_correlacion3)

"""#Visualizacion de resultados"""

import matplotlib.pyplot as plt


##grupo 1
#graficar los datos junto con la linea de regresion

prediccion = modelo1.predict(horasEstudio1)

#Crear el diagrama de dispersion de la linea de regresion
plt.figure(figsize=(6,5))
plt.scatter(horasEstudio1,calificaciones1,color='blue',label="Datos")
plt.plot(horasEstudio1,modelo1.predict(calificaciones1),color='red')
plt.scatter(horasEstudio1,prediccion,color='green',marker='x',s=100,
             label='grupo 1')
plt.title('Pronostico de calificaciones a partir de las horas de estudio')
plt.xlabel('horas de estudio')
plt.ylabel('calificaciones')
plt.legend()
plt.grid(True)
plt.show()

#graficar los datos junto con la linea de regresion

prediccion = modelo2.predict(horasEstudio2)

#Crear el diagrama de dispersion de la linea de regresion
plt.figure(figsize=(6,5))
plt.scatter(horasEstudio2,calificaciones2,color='blue',label="Datos")
plt.plot(horasEstudio2,modelo1.predict(calificaciones2),color='red')
plt.scatter(horasEstudio2,prediccion,color='green',marker='x',s=100,
             label='grupo 2')
plt.title('Pronostico de calificaciones a partir de las horas de estudio')
plt.xlabel('horas de estudio')
plt.ylabel('calificaciones')
plt.legend()
plt.grid(True)
plt.show()

#graficar los datos junto con la linea de regresion

prediccion = modelo3.predict(horasEstudio2)

#Crear el diagrama de dispersion de la linea de regresion
plt.figure(figsize=(6,5))
plt.scatter(horasEstudio3,calificaciones3,color='blue',label="Datos")
plt.plot(horasEstudio3,modelo1.predict(calificaciones3),color='red')
plt.scatter(horasEstudio3,prediccion,color='green',marker='x',s=100,
             label='grupo 3')
plt.title('Pronostico de calificaciones a partir de las horas de estudio')
plt.xlabel('horas de estudio')
plt.ylabel('calificaciones')
plt.legend()
plt.grid(True)
plt.show()

"""Analizar los resultados obtenidos en base al diagrama de dispersión la línea de regresión y
el coeficiente de correlación. Contestar las siguientes preguntas
1. ¿Explicar cuál es la interpretación del coeficiente de regresión en términos de la
relación entre el tiempo de estudio y las calificaciones finales?



> *exceptuando el grupo uno que tiene una tendencia muy diferente entre las horas de estudio y las calificaciones, el resto de grupos muestran un ingremento de 2 puntos por cada hora de estudio adicional*


2. ¿Cómo se interpreta el coeficiente de correlación en términos de la fuerza y
dirección de la relación entre las variables?



> en el caso del primer grupo la correlacion es negativa por lo que al aumentar un valor el otro tiende a disminuir, mientras que en el caso de los otros 2 el valor es positivo entre 0.9 y 0.2 de ahi el incremento de hasta 2 puntos en la calificacion


3. ¿El modelo de regresión lineal es estadísticamente significativo?


> *exceptuando el problematico grupo 1 que no presenta una gran relacion del tiempo de estudio con respecto a las calificaciones obtenidas el resto de grupos presentan una marcada relacion del tiempo de estudio con las califcaciones, resultando en que el modelo de regresion lineal sea significativamente util*




4. ¿Qué tan confiable es el modelo de regresión para predecir las
calificaciones finales de los estudiantes basado en el tiempo de estudio?


> *para el grupo uno es dificil de considerar como un medio confiable, pero para el resto de grupo se puede notar que es bastante fiable considerando los valores obtenidos*


"""